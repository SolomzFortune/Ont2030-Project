<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>